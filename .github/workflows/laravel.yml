name: Laravel CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend:
    name: Backend CI/CD (Laravel)
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'   
          MYSQL_DATABASE: task
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_PASSWORD: ''
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: 🛠️ Checkout code
        uses: actions/checkout@v3

      - name: 🧰 Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo, pdo_mysql
          tools: composer, phpstan

      - name: 📦 Install Composer Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
        working-directory: ./backend

      - name: 🔧 Set up Environment
        run: |
          cp .env.example .env
          echo "APP_KEY=base64:$(php artisan key:generate --show)" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=task" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=" >> .env  
        working-directory: ./backend

      - name: 🏁 Ensure MySQL is Ready
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 --silent && echo "MySQL is ready" && exit 0
            echo "Waiting for MySQL..."
            sleep 2
          done
          echo "MySQL did not start in time!" && exit 1
          
      - name: 🛠️ Run Migrations with MySQL
        run: php artisan migrate --force
        working-directory: ./backend
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: task
          DB_USERNAME: root
          DB_PASSWORD: ""

      - name: 🔑 Install Passport and Set Environment Variables
        run: |
          php artisan passport:install 
          CLIENT_ID=$(php artisan passport:client --personal --quiet | head -n 1)
          CLIENT_SECRET=$(php artisan passport:client --personal  --quiet --secret)
          echo "PASSPORT_PERSONAL_ACCESS_CLIENT_ID=$CLIENT_ID" >> .env
          echo "PASSPORT_PERSONAL_ACCESS_CLIENT_SECRET=$CLIENT_SECRET" >> .env
        working-directory: ./backend

      

      - name: ✅ Run Tests
        run: php artisan test
        working-directory: ./backend

      - name: 🔍 Run PHPStan
        run: vendor/bin/phpstan analyse
        working-directory: ./backend
